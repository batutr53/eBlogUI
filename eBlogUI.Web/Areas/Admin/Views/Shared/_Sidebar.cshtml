@{
    var currentPath = Context.Request.Path;
    var menuItems = new List<(string Title, string Icon, string Url, string[]? SubItems)>
    {
        ("Dashboard", "fas fa-tachometer-alt", "/Admin/Dashboard", null),
        ("İçerik Yönetimi", "fas fa-newspaper", "/#", new[] {
            "Post Yönetimi|/Admin/Post",
            "Kategoriler|/Admin/Category",
            "Etiketler|/Admin/Tag"
        }),
        ("Ürün Yönetimi", "fas fa-box", "/#", new[] {
            "Ürünler|/Admin/Product",
            "Siparişler|/Admin/Order"
        }),
        ("SEO", "fas fa-search", "/Admin/Seo", null)
    };
}

<ul class="navbar-nav bg-gradient-primary sidebar sidebar-dark accordion" id="accordionSidebar">

    <!-- Sidebar - Logo/Admin -->
    <a class="sidebar-brand d-flex align-items-center justify-content-center" href="/Admin/Dashboard">
        <div class="sidebar-brand-icon rotate-n-15">
            <i class="fas fa-feather-alt"></i>
        </div>
        <div class="sidebar-brand-text mx-3">eBlog Admin</div>
    </a>

    <hr class="sidebar-divider my-0" />

    @foreach (var item in menuItems)
    {
        var hasSubItems = item.SubItems != null && item.SubItems.Any();
        var isActive = currentPath.StartsWithSegments(item.Url, StringComparison.OrdinalIgnoreCase) || 
                      (hasSubItems && item.SubItems.Any(sub => currentPath.StartsWithSegments(sub.Split('|')[1], StringComparison.OrdinalIgnoreCase)));
        
        <li class="nav-item @(isActive ? "active" : "")">
            @if (hasSubItems)
            {
                <a class="nav-link collapsed" href="#" data-toggle="collapse" data-target="#collapse@(item.Title.Replace(" ", ""))" 
                   aria-expanded="@(isActive ? "true" : "false")" aria-controls="collapse@(item.Title.Replace(" ", ""))">
                    <i class="@item.Icon"></i>
                    <span>@item.Title</span>
                    <i class="fas fa-chevron-down float-right"></i>
                </a>
                
                <div id="collapse@(item.Title.Replace(" ", ""))" class="collapse @(isActive ? "show" : "")" aria-labelledby="heading@(item.Title.Replace(" ", ""))" data-parent="#accordionSidebar">
                    <div class="bg-white py-2 collapse-inner rounded">
                        @foreach (var subItem in item.SubItems)
                        {
                            var subItemParts = subItem.Split('|');
                            var subItemTitle = subItemParts[0];
                            var subItemUrl = subItemParts[1];
                            var isSubActive = currentPath.StartsWithSegments(subItemUrl, StringComparison.OrdinalIgnoreCase);
                            
                            <a class="collapse-item @(isSubActive ? "active" : "")" href="@subItemUrl">
                                @subItemTitle
                            </a>
                        }
                    </div>
                </div>
            }
            else
            {
                <a class="nav-link" href="@item.Url">
                    <i class="@item.Icon"></i>
                    <span>@item.Title</span>
                </a>
            }
        </li>
    }

    <hr class="sidebar-divider" />

    <!-- Çıkış Butonu -->
    <li class="nav-item">
        <a class="nav-link text-danger" href="/Account/Logout">
            <i class="fas fa-sign-out-alt"></i>
            <span>Çıkış Yap</span>
        </a>
    </li>

    <div class="text-center d-none d-md-inline">
        <button class="rounded-circle border-0" id="sidebarToggle"></button>
    </div>

</ul>
